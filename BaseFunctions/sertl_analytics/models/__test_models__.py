from sklearn.linear_model import LinearRegression
import numpy as np


regr = LinearRegression()

x_list = [288529156,288529266,288659762,290438705,290586825,290611849,290644411,290663250,290878023,290878030,290878041,
         290879410,290879422,290880042,290880192,290880215,290880238,290880356,290880363,290920606,290970167,291008927,
         291009105,291013445,291056462,291094667,291096602,291126092,291145844,291491960,291520699,291525020,291526700,
         291537280,291606482,291613883,291712378,292381416,292547292,292631980]

X = np.array([[x] for x in x_list])

y = np.array((-0.8,-2.5,-2.5,-1.5,-1.2,-0.1,-0.2,0.,-0.2,-1.1,-1.2,-0.5,-1.5,-1.8,-0.2,-1.1,-1.5,-0.2,-1.1,-0.9,0.,-0.1,
         -0.5,-0.1,-0.5,-1.3,0.,-0.8,-0.3,-0.24,0.,-1.44,-0.3,-0.94,-0.25,-0.84,-0.34,-1.65,-0.84,-2.58))

# print('x_train={}, y_train={}'.format(X, y))
# X.reshape(1, -1)
# y.reshape(1, -1)
# print('x_train={}, y_train={}'.format(X, y))
# print('x_train.shape={}, y_train.shape={}'.format(X.shape, y.shape))
# regr.fit(X, y)
# y_predict = regr.predict(X)

X = np.array([[1,2], [5,8], [1.5,1.8], [8,8], [1,0.6], [9,11]])
X = np.array([[1], [2], [3], [4], [5], [6]])
# X = np.array([1, 2, 3, 4, 5, 6]).reshape(-1, 1)
y = np.array([0,1,0,1,0,1])

regr.fit(X, y)
y_predict = regr.predict(X)
print('y_predict={}'.format(y_predict))